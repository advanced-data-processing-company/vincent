cmake_minimum_required(VERSION 2.6)

project (webservice_server CXX)

set(WEBSERVICE_SERVER_HEADERS webservice_server.h)

set(PROJECT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(WEBSERVICE_SERVER_CODEGEN_DIR "${PROJECT_BINARY_DIR}/codegen")

PREPEND(WEBSERVICE_SERVER_HEADERS_PATHS ${PROJECT_SOURCE_DIR} ${WEBSERVICE_SERVER_HEADERS})

CODEGEN_FILES(WEBSERVICE_SERVER_CODEGEN_SOURCES ${WEBSERVICE_SERVER_CODEGEN_DIR} ${WEBSERVICE_SERVER_HEADERS})

add_custom_command(OUTPUT ${WEBSERVICE_SERVER_CODEGEN_SOURCES}
    COMMAND ${NGREST_BIN_PATH}ngrestcg -i "${PROJECT_SOURCE_DIR}" -o ${WEBSERVICE_SERVER_CODEGEN_DIR} -t service ${WEBSERVICE_SERVER_HEADERS}
    DEPENDS ${WEBSERVICE_SERVER_HEADERS_PATHS}
)

file(GLOB WEBSERVICE_SERVER_SOURCES ${PROJECT_SOURCE_DIR}/*.cpp)

list(APPEND WEBSERVICE_SERVER_SOURCES ${WEBSERVICE_SERVER_CODEGEN_SOURCES})

include_directories(${PROJECT_SOURCE_DIR} $ENV{NGREST_EXT_INCLUDES})

add_library(webservice_server MODULE ${WEBSERVICE_SERVER_SOURCES})

set_target_properties(webservice_server PROPERTIES PREFIX "")
set_target_properties(webservice_server PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY "${PROJECT_SERVICES_DIR}"
)

target_link_libraries(webservice_server ngrestutils ngrestcommon ngrestjson ngrestengine $ENV{NGREST_EXT_LIBS})
